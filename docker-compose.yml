version: "3.8"

networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
  nginx_logs: {}

services:
  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
      - "--web.listen-address=0.0.0.0:${PROMETHEUS_PORT}"
    restart: unless-stopped
    expose:
      - ${PROMETHEUS_PORT}
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.21.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
      - "--web.listen-address=0.0.0.0:${ALERTMANAGER_PORT}"
    restart: unless-stopped
    expose:
      - ${ALERTMANAGER_PORT}
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v1.0.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    restart: unless-stopped
    expose:
      - ${NODE_EXPORTER_PORT}
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.37.0
    container_name: cadvisor
    command:
      - "--port=${CADVISOR_PORT}"
      - "--url_base_prefix="
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    expose:
      - ${CADVISOR_PORT}
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    env_file:
      - .env
    restart: unless-stopped
    expose:
      - ${GRAFANA_PORT}
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.2.0
    container_name: pushgateway
    command:
      - "--web.listen-address=0.0.0.0:${PUSHGATEWAY_PORT}"
    restart: unless-stopped
    expose:
      - ${PUSHGATEWAY_PORT}
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nginx:
    build:
      context: ./nginx/
      dockerfile: nginx.dockerfile
    container_name: nginx
    volumes:
      - nginx_logs:/var/logs/nginx
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
      - ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}
      - ${PUSHGATEWAY_PORT}:${PUSHGATEWAY_PORT}
      - ${ALERTMANAGER_PORT}:${ALERTMANAGER_PORT}
    restart: unless-stopped
    depends_on:
      - grafana
    env_file: .env
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
